'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultToast = exports.shrink = exports.toastWidth = exports.gutter = exports.borderRadius = undefined;

var _emotion = require('emotion');

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactEmotion = require('react-emotion');

var _reactEmotion2 = _interopRequireDefault(_reactEmotion);

var _icons = require('./icons');

var _colors = require('./colors');

var colors = _interopRequireWildcard(_colors);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// common
var borderRadius = exports.borderRadius = 4;
var gutter = exports.gutter = 8;
var toastWidth = exports.toastWidth = 360;
var shrink = /*#__PURE__*/exports.shrink = (0, _reactEmotion.keyframes)('from{height:100%;}to{height:0%}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */label:shrink;');

// a11y helper
var A11yText = function A11yText(_ref) {
  var Tag = _ref.tag,
      props = _objectWithoutProperties(_ref, ['tag']);

  return _react2.default.createElement(Tag, _extends({
    className: (0, _emotion.css)({
      border: 0,
      clip: 'rect(1px, 1px, 1px, 1px)',
      height: 1,
      overflow: 'hidden',
      padding: 0,
      position: 'absolute',
      whiteSpace: 'nowrap',
      width: 1
    }, '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Ub2FzdEVsZW1lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JJIiwiZmlsZSI6Ii4uL3NyYy9Ub2FzdEVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IENoaWxkcmVuLCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQsIHsga2V5ZnJhbWVzIH0gZnJvbSAncmVhY3QtZW1vdGlvbic7XHJcblxyXG5pbXBvcnQgeyBDaGVja0ljb24sIEZsYW1lSWNvbiwgSW5mb0ljb24sIENsb3NlSWNvbiwgQWxlcnRJY29uIH0gZnJvbSAnLi9pY29ucyc7XHJcbmltcG9ydCAqIGFzIGNvbG9ycyBmcm9tICcuL2NvbG9ycyc7XHJcbmltcG9ydCB0eXBlIHsgSG92ZXJGbiwgUGxhY2VtZW50IH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG4vLyBjb21tb25cclxuZXhwb3J0IGNvbnN0IGJvcmRlclJhZGl1cyA9IDQ7XHJcbmV4cG9ydCBjb25zdCBndXR0ZXIgPSA4O1xyXG5leHBvcnQgY29uc3QgdG9hc3RXaWR0aCA9IDM2MDtcclxuZXhwb3J0IGNvbnN0IHNocmluayA9IGtleWZyYW1lc2Bmcm9tIHsgaGVpZ2h0OiAxMDAlOyB9IHRvIHsgaGVpZ2h0OiAwJSB9YDtcclxuXHJcbi8vIGExMXkgaGVscGVyXHJcbmNvbnN0IEExMXlUZXh0ID0gKHsgdGFnOiBUYWcsIC4uLnByb3BzIH0pID0+IChcclxuICA8VGFnXHJcbiAgICBjc3M9e3tcclxuICAgICAgYm9yZGVyOiAwLFxyXG4gICAgICBjbGlwOiAncmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpJyxcclxuICAgICAgaGVpZ2h0OiAxLFxyXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXHJcbiAgICAgIHBhZGRpbmc6IDAsXHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcclxuICAgICAgd2lkdGg6IDEsXHJcbiAgICB9fVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbik7XHJcbkExMXlUZXh0LmRlZmF1bHRQcm9wcyA9IHtcclxuICB0YWc6ICdzcGFuJyxcclxufTtcclxuXHJcbi8vIGRlZmF1bHQgYXBwZWFyYW5jZXNcclxuXHJcbmNvbnN0IGFwcGVhcmFuY2VzID0ge1xyXG4gIHN1Y2Nlc3M6IHtcclxuICAgIGljb246IENoZWNrSWNvbixcclxuICAgIHRleHQ6IGNvbG9ycy5HNTAwLFxyXG4gICAgZmc6IGNvbG9ycy5HMzAwLFxyXG4gICAgYmc6IGNvbG9ycy5HNTAsXHJcbiAgfSxcclxuICBlcnJvcjoge1xyXG4gICAgaWNvbjogRmxhbWVJY29uLFxyXG4gICAgdGV4dDogY29sb3JzLlI1MDAsXHJcbiAgICBmZzogY29sb3JzLlIzMDAsXHJcbiAgICBiZzogY29sb3JzLlI1MCxcclxuICB9LFxyXG4gIHdhcm5pbmc6IHtcclxuICAgIGljb246IEFsZXJ0SWNvbixcclxuICAgIHRleHQ6IGNvbG9ycy5ZNTAwLFxyXG4gICAgZmc6IGNvbG9ycy5ZMzAwLFxyXG4gICAgYmc6IGNvbG9ycy5ZNTAsXHJcbiAgfSxcclxuICBpbmZvOiB7XHJcbiAgICBpY29uOiBJbmZvSWNvbixcclxuICAgIHRleHQ6IGNvbG9ycy5ONDAwLFxyXG4gICAgZmc6IGNvbG9ycy5CMjAwLFxyXG4gICAgYmc6ICd3aGl0ZScsXHJcbiAgfSxcclxufTtcclxuZXhwb3J0IHR5cGUgQXBwZWFyYW5jZVR5cGVzID0gJEtleXM8dHlwZW9mIGFwcGVhcmFuY2VzPjtcclxuXHJcbmNvbnN0IEJ1dHRvbiA9IHN0eWxlZC5kaXYoe1xyXG4gIGN1cnNvcjogJ3BvaW50ZXInLFxyXG4gIGZsZXhTaHJpbms6IDAsXHJcbiAgb3BhY2l0eTogMC41LFxyXG4gIHBhZGRpbmc6IGAke2d1dHRlcn1weCAke2d1dHRlciAqIDEuNX1weGAsXHJcbiAgdHJhbnNpdGlvbjogJ29wYWNpdHkgMTUwbXMnLFxyXG5cclxuICAnOmhvdmVyJzogeyBvcGFjaXR5OiAxIH0sXHJcbn0pO1xyXG5cclxuY29uc3QgQ29udGVudCA9IHN0eWxlZC5kaXYoe1xyXG4gIGZsZXhHcm93OiAxLFxyXG4gIGZvbnRTaXplOiAxNCxcclxuICBsaW5lSGVpZ2h0OiAxLjQsXHJcbiAgbWluSGVpZ2h0OiA0MCxcclxuICBwYWRkaW5nOiBgJHtndXR0ZXJ9cHggJHtndXR0ZXIgKiAxLjV9cHhgLFxyXG59KTtcclxuXHJcbi8vIE5PVEU6IGludm9rZSBhbmltYXRpb24gd2hlbiBOT1QgYGF1dG9EaXNtaXNzYCB3aXRoIG9wYWNpdHkgb2YgMCB0byBhdm9pZCBhXHJcbi8vIHBhaW50IGJ1ZyBpbiBGaXJlRm94LlxyXG4vLyBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02MjUyODlcclxuY29uc3QgQ291bnRkb3duID0gc3R5bGVkLmRpdigoeyBhdXRvRGlzbWlzc1RpbWVvdXQsIG9wYWNpdHksIGlzUnVubmluZyB9KSA9PiAoe1xyXG4gIGFuaW1hdGlvbjogYCR7c2hyaW5rfSAke2F1dG9EaXNtaXNzVGltZW91dH1tcyBsaW5lYXJgLFxyXG4gIGFuaW1hdGlvblBsYXlTdGF0ZTogaXNSdW5uaW5nID8gJ3J1bm5pbmcnIDogJ3BhdXNlZCcsXHJcbiAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLDAsMCwwLjEpJyxcclxuICBib3R0b206IDAsXHJcbiAgaGVpZ2h0OiAwLFxyXG4gIGxlZnQ6IDAsXHJcbiAgb3BhY2l0eSxcclxuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICB3aWR0aDogJzEwMCUnLFxyXG59KSk7XHJcbmNvbnN0IEljb24gPSAoeyBhcHBlYXJhbmNlLCBhdXRvRGlzbWlzcywgYXV0b0Rpc21pc3NUaW1lb3V0LCBpc1J1bm5pbmcgfSkgPT4ge1xyXG4gIGNvbnN0IG1ldGEgPSBhcHBlYXJhbmNlc1thcHBlYXJhbmNlXTtcclxuICBjb25zdCBHbHlwaCA9IG1ldGEuaWNvbjtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXZcclxuICAgICAgY3NzPXt7XHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBtZXRhLmZnLFxyXG4gICAgICAgIGJvcmRlclRvcExlZnRSYWRpdXM6IGJvcmRlclJhZGl1cyxcclxuICAgICAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiBib3JkZXJSYWRpdXMsXHJcbiAgICAgICAgY29sb3I6IG1ldGEuYmcsXHJcbiAgICAgICAgZmxleFNocmluazogMCxcclxuICAgICAgICBwYWRkaW5nQm90dG9tOiBndXR0ZXIsXHJcbiAgICAgICAgcGFkZGluZ1RvcDogZ3V0dGVyLFxyXG4gICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxyXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcclxuICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gICAgICAgIHdpZHRoOiAzMCxcclxuICAgICAgfX1cclxuICAgID5cclxuICAgICAgPENvdW50ZG93blxyXG4gICAgICAgIG9wYWNpdHk9e2F1dG9EaXNtaXNzID8gMSA6IDB9XHJcbiAgICAgICAgYXV0b0Rpc21pc3NUaW1lb3V0PXthdXRvRGlzbWlzc1RpbWVvdXR9XHJcbiAgICAgICAgaXNSdW5uaW5nPXtpc1J1bm5pbmd9XHJcbiAgICAgIC8+XHJcbiAgICAgIDxHbHlwaCBjc3M9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHpJbmRleDogMSB9fSAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuZnVuY3Rpb24gZ2V0VHJhbnNsYXRlKHBsYWNlbWVudCkge1xyXG4gIGNvbnN0IHBvcyA9IHBsYWNlbWVudC5zcGxpdCgnLScpO1xyXG4gIGNvbnN0IHJlbGV2YW50UGxhY2VtZW50ID0gcG9zWzFdID09PSAnY2VudGVyJyA/IHBvc1swXSA6IHBvc1sxXTtcclxuICBjb25zdCB0cmFuc2xhdGVNYXAgPSB7XHJcbiAgICByaWdodDogJ3RyYW5zbGF0ZTNkKDEyMCUsIDAsIDApJyxcclxuICAgIGxlZnQ6ICd0cmFuc2xhdGUzZCgtMTIwJSwgMCwgMCknLFxyXG4gICAgYm90dG9tOiAndHJhbnNsYXRlM2QoMCwgMTIwJSwgMCknLFxyXG4gICAgdG9wOiAndHJhbnNsYXRlM2QoMCwgLTEyMCUsIDApJyxcclxuICB9O1xyXG5cclxuICByZXR1cm4gdHJhbnNsYXRlTWFwW3JlbGV2YW50UGxhY2VtZW50XTtcclxufVxyXG5leHBvcnQgdHlwZSBUcmFuc2l0aW9uU3RhdGUgPSAnZW50ZXJpbmcnIHwgJ2VudGVyZWQnIHwgJ2V4aXRpbmcnIHwgJ2V4aXRlZCc7XHJcbmNvbnN0IHRvYXN0U3RhdGVzID0gKHBsYWNlbWVudDogUGxhY2VtZW50KSA9PiAoe1xyXG4gIGVudGVyaW5nOiB7IHRyYW5zZm9ybTogZ2V0VHJhbnNsYXRlKHBsYWNlbWVudCkgfSxcclxuICBlbnRlcmVkOiB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsMCwwKScgfSxcclxuICBleGl0aW5nOiB7IHRyYW5zZm9ybTogZ2V0VHJhbnNsYXRlKHBsYWNlbWVudCkgfSxcclxuICBleGl0ZWQ6IHsgdHJhbnNmb3JtOiBnZXRUcmFuc2xhdGUocGxhY2VtZW50KSB9LFxyXG59KTtcclxuY29uc3QgVG9hc3RFbGVtZW50ID0gc3R5bGVkLmRpdihcclxuICAoeyBhcHBlYXJhbmNlLCBwbGFjZW1lbnQsIHRyYW5zaXRpb25EdXJhdGlvbiwgdHJhbnNpdGlvblN0YXRlIH0pID0+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogYXBwZWFyYW5jZXNbYXBwZWFyYW5jZV0uYmcsXHJcbiAgICAgIGJvcmRlclJhZGl1cyxcclxuICAgICAgYm94U2hhZG93OiAnMCAzcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xNzUpJyxcclxuICAgICAgY29sb3I6IGFwcGVhcmFuY2VzW2FwcGVhcmFuY2VdLnRleHQsXHJcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgICAgbWFyZ2luQm90dG9tOiBndXR0ZXIsXHJcbiAgICAgIHRyYW5zaXRpb246IGB0cmFuc2Zvcm0gJHt0cmFuc2l0aW9uRHVyYXRpb259bXMgY3ViaWMtYmV6aWVyKDAuMiwgMCwgMCwgMSlgLFxyXG4gICAgICB3aWR0aDogdG9hc3RXaWR0aCxcclxuICAgICAgLi4udG9hc3RTdGF0ZXMocGxhY2VtZW50KVt0cmFuc2l0aW9uU3RhdGVdLFxyXG4gICAgfTtcclxuICB9XHJcbik7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gRGVmYXVsdFRvYXN0XHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuZXhwb3J0IHR5cGUgVG9hc3RQcm9wcyA9IHtcclxuICBhcHBlYXJhbmNlOiBBcHBlYXJhbmNlVHlwZXMsXHJcbiAgYXV0b0Rpc21pc3M6IGJvb2xlYW4gfCBudW1iZXIsXHJcbiAgYXV0b0Rpc21pc3NUaW1lb3V0OiBudW1iZXIsIC8vIGluaGVyaXRlZCBmcm9tIFRvYXN0UHJvdmlkZXJcclxuICBjaGlsZHJlbjogTm9kZSxcclxuICBvbkRpc21pc3M6IEV2ZW50ID0+ICosXHJcbiAgb25Nb3VzZUVudGVyOiBIb3ZlckZuLFxyXG4gIG9uTW91c2VMZWF2ZTogSG92ZXJGbixcclxuICBwYXVzZU9uSG92ZXI6IGJvb2xlYW4sXHJcbiAgcGxhY2VtZW50OiBQbGFjZW1lbnQsXHJcbiAgdHJhbnNpdGlvbkR1cmF0aW9uOiBudW1iZXIsIC8vIGluaGVyaXRlZCBmcm9tIFRvYXN0UHJvdmlkZXJcclxuICB0cmFuc2l0aW9uU3RhdGU6IFRyYW5zaXRpb25TdGF0ZSwgLy8gaW5oZXJpdGVkIGZyb20gVG9hc3RQcm92aWRlclxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IERlZmF1bHRUb2FzdCA9ICh7XHJcbiAgYXBwZWFyYW5jZSxcclxuICBhdXRvRGlzbWlzcyxcclxuICBhdXRvRGlzbWlzc1RpbWVvdXQsXHJcbiAgY2hpbGRyZW4sXHJcbiAgaXNSdW5uaW5nLFxyXG4gIG9uRGlzbWlzcyxcclxuICBwYXVzZU9uSG92ZXIsXHJcbiAgcGxhY2VtZW50LFxyXG4gIHRyYW5zaXRpb25EdXJhdGlvbixcclxuICB0cmFuc2l0aW9uU3RhdGUsXHJcbiAgb25Nb3VzZUVudGVyLFxyXG4gIG9uTW91c2VMZWF2ZSxcclxufTogVG9hc3RQcm9wcykgPT4gKFxyXG4gIDxUb2FzdEVsZW1lbnRcclxuICAgIGFwcGVhcmFuY2U9e2FwcGVhcmFuY2V9XHJcbiAgICBwbGFjZW1lbnQ9e3BsYWNlbWVudH1cclxuICAgIHRyYW5zaXRpb25TdGF0ZT17dHJhbnNpdGlvblN0YXRlfVxyXG4gICAgdHJhbnNpdGlvbkR1cmF0aW9uPXt0cmFuc2l0aW9uRHVyYXRpb259XHJcbiAgICBvbk1vdXNlRW50ZXI9e29uTW91c2VFbnRlcn1cclxuICAgIG9uTW91c2VMZWF2ZT17b25Nb3VzZUxlYXZlfVxyXG4gID5cclxuICAgIDxJY29uXHJcbiAgICAgIGFwcGVhcmFuY2U9e2FwcGVhcmFuY2V9XHJcbiAgICAgIGF1dG9EaXNtaXNzPXthdXRvRGlzbWlzc31cclxuICAgICAgYXV0b0Rpc21pc3NUaW1lb3V0PXthdXRvRGlzbWlzc1RpbWVvdXR9XHJcbiAgICAgIGlzUnVubmluZz17aXNSdW5uaW5nfVxyXG4gICAgLz5cclxuICAgIDxDb250ZW50PntjaGlsZHJlbn08L0NvbnRlbnQ+XHJcbiAgICB7b25EaXNtaXNzID8gKFxyXG4gICAgICA8QnV0dG9uIG9uQ2xpY2s9e29uRGlzbWlzc30gcm9sZT1cImJ1dHRvblwiPlxyXG4gICAgICAgIDxDbG9zZUljb24gLz5cclxuICAgICAgICA8QTExeVRleHQ+Q2xvc2U8L0ExMXlUZXh0PlxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICkgOiBudWxsfVxyXG4gIDwvVG9hc3RFbGVtZW50PlxyXG4pO1xyXG4iXX0= */')
  }, props));
};
A11yText.defaultProps = {
  tag: 'span'
};

// default appearances

var appearances = {
  success: {
    icon: _icons.CheckIcon,
    text: colors.G500,
    fg: colors.G300,
    bg: colors.G50
  },
  error: {
    icon: _icons.FlameIcon,
    text: colors.R500,
    fg: colors.R300,
    bg: colors.R50
  },
  warning: {
    icon: _icons.AlertIcon,
    text: colors.Y500,
    fg: colors.Y300,
    bg: colors.Y50
  },
  info: {
    icon: _icons.InfoIcon,
    text: colors.N400,
    fg: colors.B200,
    bg: 'white'
  }
};


var Button = /*#__PURE__*/(0, _reactEmotion2.default)('div', {
  target: 'e1bq9cr10',
  label: 'Button'
})({
  cursor: 'pointer',
  flexShrink: 0,
  opacity: 0.5,
  padding: gutter + 'px ' + gutter * 1.5 + 'px',
  transition: 'opacity 150ms',

  ':hover': { opacity: 1 }
}, '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */');

var Content = /*#__PURE__*/(0, _reactEmotion2.default)('div', {
  target: 'e1bq9cr11',
  label: 'Content'
})({
  flexGrow: 1,
  fontSize: 14,
  lineHeight: 1.4,
  minHeight: 40,
  padding: gutter + 'px ' + gutter * 1.5 + 'px'
}, '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */');

// NOTE: invoke animation when NOT `autoDismiss` with opacity of 0 to avoid a
// paint bug in FireFox.
// https://bugzilla.mozilla.org/show_bug.cgi?id=625289
var Countdown = /*#__PURE__*/(0, _reactEmotion2.default)('div', {
  target: 'e1bq9cr12',
  label: 'Countdown'
})(function (_ref2) {
  var autoDismissTimeout = _ref2.autoDismissTimeout,
      opacity = _ref2.opacity,
      isRunning = _ref2.isRunning;
  return {
    animation: shrink + ' ' + autoDismissTimeout + 'ms linear',
    animationPlayState: isRunning ? 'running' : 'paused',
    backgroundColor: 'rgba(0,0,0,0.1)',
    bottom: 0,
    height: 0,
    left: 0,
    opacity: opacity,
    position: 'absolute',
    width: '100%'
  };
}, '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */');
var Icon = function Icon(_ref3) {
  var appearance = _ref3.appearance,
      autoDismiss = _ref3.autoDismiss,
      autoDismissTimeout = _ref3.autoDismissTimeout,
      isRunning = _ref3.isRunning;

  var meta = appearances[appearance];
  var Glyph = meta.icon;

  return _react2.default.createElement(
    'div',
    {
      className: (0, _emotion.css)({
        backgroundColor: meta.fg,
        borderTopLeftRadius: borderRadius,
        borderBottomLeftRadius: borderRadius,
        color: meta.bg,
        flexShrink: 0,
        paddingBottom: gutter,
        paddingTop: gutter,
        position: 'relative',
        overflow: 'hidden',
        textAlign: 'center',
        width: 30
      }, '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Ub2FzdEVsZW1lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUdNIiwiZmlsZSI6Ii4uL3NyYy9Ub2FzdEVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IENoaWxkcmVuLCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQsIHsga2V5ZnJhbWVzIH0gZnJvbSAncmVhY3QtZW1vdGlvbic7XHJcblxyXG5pbXBvcnQgeyBDaGVja0ljb24sIEZsYW1lSWNvbiwgSW5mb0ljb24sIENsb3NlSWNvbiwgQWxlcnRJY29uIH0gZnJvbSAnLi9pY29ucyc7XHJcbmltcG9ydCAqIGFzIGNvbG9ycyBmcm9tICcuL2NvbG9ycyc7XHJcbmltcG9ydCB0eXBlIHsgSG92ZXJGbiwgUGxhY2VtZW50IH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG4vLyBjb21tb25cclxuZXhwb3J0IGNvbnN0IGJvcmRlclJhZGl1cyA9IDQ7XHJcbmV4cG9ydCBjb25zdCBndXR0ZXIgPSA4O1xyXG5leHBvcnQgY29uc3QgdG9hc3RXaWR0aCA9IDM2MDtcclxuZXhwb3J0IGNvbnN0IHNocmluayA9IGtleWZyYW1lc2Bmcm9tIHsgaGVpZ2h0OiAxMDAlOyB9IHRvIHsgaGVpZ2h0OiAwJSB9YDtcclxuXHJcbi8vIGExMXkgaGVscGVyXHJcbmNvbnN0IEExMXlUZXh0ID0gKHsgdGFnOiBUYWcsIC4uLnByb3BzIH0pID0+IChcclxuICA8VGFnXHJcbiAgICBjc3M9e3tcclxuICAgICAgYm9yZGVyOiAwLFxyXG4gICAgICBjbGlwOiAncmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpJyxcclxuICAgICAgaGVpZ2h0OiAxLFxyXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXHJcbiAgICAgIHBhZGRpbmc6IDAsXHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcclxuICAgICAgd2lkdGg6IDEsXHJcbiAgICB9fVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbik7XHJcbkExMXlUZXh0LmRlZmF1bHRQcm9wcyA9IHtcclxuICB0YWc6ICdzcGFuJyxcclxufTtcclxuXHJcbi8vIGRlZmF1bHQgYXBwZWFyYW5jZXNcclxuXHJcbmNvbnN0IGFwcGVhcmFuY2VzID0ge1xyXG4gIHN1Y2Nlc3M6IHtcclxuICAgIGljb246IENoZWNrSWNvbixcclxuICAgIHRleHQ6IGNvbG9ycy5HNTAwLFxyXG4gICAgZmc6IGNvbG9ycy5HMzAwLFxyXG4gICAgYmc6IGNvbG9ycy5HNTAsXHJcbiAgfSxcclxuICBlcnJvcjoge1xyXG4gICAgaWNvbjogRmxhbWVJY29uLFxyXG4gICAgdGV4dDogY29sb3JzLlI1MDAsXHJcbiAgICBmZzogY29sb3JzLlIzMDAsXHJcbiAgICBiZzogY29sb3JzLlI1MCxcclxuICB9LFxyXG4gIHdhcm5pbmc6IHtcclxuICAgIGljb246IEFsZXJ0SWNvbixcclxuICAgIHRleHQ6IGNvbG9ycy5ZNTAwLFxyXG4gICAgZmc6IGNvbG9ycy5ZMzAwLFxyXG4gICAgYmc6IGNvbG9ycy5ZNTAsXHJcbiAgfSxcclxuICBpbmZvOiB7XHJcbiAgICBpY29uOiBJbmZvSWNvbixcclxuICAgIHRleHQ6IGNvbG9ycy5ONDAwLFxyXG4gICAgZmc6IGNvbG9ycy5CMjAwLFxyXG4gICAgYmc6ICd3aGl0ZScsXHJcbiAgfSxcclxufTtcclxuZXhwb3J0IHR5cGUgQXBwZWFyYW5jZVR5cGVzID0gJEtleXM8dHlwZW9mIGFwcGVhcmFuY2VzPjtcclxuXHJcbmNvbnN0IEJ1dHRvbiA9IHN0eWxlZC5kaXYoe1xyXG4gIGN1cnNvcjogJ3BvaW50ZXInLFxyXG4gIGZsZXhTaHJpbms6IDAsXHJcbiAgb3BhY2l0eTogMC41LFxyXG4gIHBhZGRpbmc6IGAke2d1dHRlcn1weCAke2d1dHRlciAqIDEuNX1weGAsXHJcbiAgdHJhbnNpdGlvbjogJ29wYWNpdHkgMTUwbXMnLFxyXG5cclxuICAnOmhvdmVyJzogeyBvcGFjaXR5OiAxIH0sXHJcbn0pO1xyXG5cclxuY29uc3QgQ29udGVudCA9IHN0eWxlZC5kaXYoe1xyXG4gIGZsZXhHcm93OiAxLFxyXG4gIGZvbnRTaXplOiAxNCxcclxuICBsaW5lSGVpZ2h0OiAxLjQsXHJcbiAgbWluSGVpZ2h0OiA0MCxcclxuICBwYWRkaW5nOiBgJHtndXR0ZXJ9cHggJHtndXR0ZXIgKiAxLjV9cHhgLFxyXG59KTtcclxuXHJcbi8vIE5PVEU6IGludm9rZSBhbmltYXRpb24gd2hlbiBOT1QgYGF1dG9EaXNtaXNzYCB3aXRoIG9wYWNpdHkgb2YgMCB0byBhdm9pZCBhXHJcbi8vIHBhaW50IGJ1ZyBpbiBGaXJlRm94LlxyXG4vLyBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02MjUyODlcclxuY29uc3QgQ291bnRkb3duID0gc3R5bGVkLmRpdigoeyBhdXRvRGlzbWlzc1RpbWVvdXQsIG9wYWNpdHksIGlzUnVubmluZyB9KSA9PiAoe1xyXG4gIGFuaW1hdGlvbjogYCR7c2hyaW5rfSAke2F1dG9EaXNtaXNzVGltZW91dH1tcyBsaW5lYXJgLFxyXG4gIGFuaW1hdGlvblBsYXlTdGF0ZTogaXNSdW5uaW5nID8gJ3J1bm5pbmcnIDogJ3BhdXNlZCcsXHJcbiAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLDAsMCwwLjEpJyxcclxuICBib3R0b206IDAsXHJcbiAgaGVpZ2h0OiAwLFxyXG4gIGxlZnQ6IDAsXHJcbiAgb3BhY2l0eSxcclxuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICB3aWR0aDogJzEwMCUnLFxyXG59KSk7XHJcbmNvbnN0IEljb24gPSAoeyBhcHBlYXJhbmNlLCBhdXRvRGlzbWlzcywgYXV0b0Rpc21pc3NUaW1lb3V0LCBpc1J1bm5pbmcgfSkgPT4ge1xyXG4gIGNvbnN0IG1ldGEgPSBhcHBlYXJhbmNlc1thcHBlYXJhbmNlXTtcclxuICBjb25zdCBHbHlwaCA9IG1ldGEuaWNvbjtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXZcclxuICAgICAgY3NzPXt7XHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBtZXRhLmZnLFxyXG4gICAgICAgIGJvcmRlclRvcExlZnRSYWRpdXM6IGJvcmRlclJhZGl1cyxcclxuICAgICAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiBib3JkZXJSYWRpdXMsXHJcbiAgICAgICAgY29sb3I6IG1ldGEuYmcsXHJcbiAgICAgICAgZmxleFNocmluazogMCxcclxuICAgICAgICBwYWRkaW5nQm90dG9tOiBndXR0ZXIsXHJcbiAgICAgICAgcGFkZGluZ1RvcDogZ3V0dGVyLFxyXG4gICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxyXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcclxuICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gICAgICAgIHdpZHRoOiAzMCxcclxuICAgICAgfX1cclxuICAgID5cclxuICAgICAgPENvdW50ZG93blxyXG4gICAgICAgIG9wYWNpdHk9e2F1dG9EaXNtaXNzID8gMSA6IDB9XHJcbiAgICAgICAgYXV0b0Rpc21pc3NUaW1lb3V0PXthdXRvRGlzbWlzc1RpbWVvdXR9XHJcbiAgICAgICAgaXNSdW5uaW5nPXtpc1J1bm5pbmd9XHJcbiAgICAgIC8+XHJcbiAgICAgIDxHbHlwaCBjc3M9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHpJbmRleDogMSB9fSAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuZnVuY3Rpb24gZ2V0VHJhbnNsYXRlKHBsYWNlbWVudCkge1xyXG4gIGNvbnN0IHBvcyA9IHBsYWNlbWVudC5zcGxpdCgnLScpO1xyXG4gIGNvbnN0IHJlbGV2YW50UGxhY2VtZW50ID0gcG9zWzFdID09PSAnY2VudGVyJyA/IHBvc1swXSA6IHBvc1sxXTtcclxuICBjb25zdCB0cmFuc2xhdGVNYXAgPSB7XHJcbiAgICByaWdodDogJ3RyYW5zbGF0ZTNkKDEyMCUsIDAsIDApJyxcclxuICAgIGxlZnQ6ICd0cmFuc2xhdGUzZCgtMTIwJSwgMCwgMCknLFxyXG4gICAgYm90dG9tOiAndHJhbnNsYXRlM2QoMCwgMTIwJSwgMCknLFxyXG4gICAgdG9wOiAndHJhbnNsYXRlM2QoMCwgLTEyMCUsIDApJyxcclxuICB9O1xyXG5cclxuICByZXR1cm4gdHJhbnNsYXRlTWFwW3JlbGV2YW50UGxhY2VtZW50XTtcclxufVxyXG5leHBvcnQgdHlwZSBUcmFuc2l0aW9uU3RhdGUgPSAnZW50ZXJpbmcnIHwgJ2VudGVyZWQnIHwgJ2V4aXRpbmcnIHwgJ2V4aXRlZCc7XHJcbmNvbnN0IHRvYXN0U3RhdGVzID0gKHBsYWNlbWVudDogUGxhY2VtZW50KSA9PiAoe1xyXG4gIGVudGVyaW5nOiB7IHRyYW5zZm9ybTogZ2V0VHJhbnNsYXRlKHBsYWNlbWVudCkgfSxcclxuICBlbnRlcmVkOiB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsMCwwKScgfSxcclxuICBleGl0aW5nOiB7IHRyYW5zZm9ybTogZ2V0VHJhbnNsYXRlKHBsYWNlbWVudCkgfSxcclxuICBleGl0ZWQ6IHsgdHJhbnNmb3JtOiBnZXRUcmFuc2xhdGUocGxhY2VtZW50KSB9LFxyXG59KTtcclxuY29uc3QgVG9hc3RFbGVtZW50ID0gc3R5bGVkLmRpdihcclxuICAoeyBhcHBlYXJhbmNlLCBwbGFjZW1lbnQsIHRyYW5zaXRpb25EdXJhdGlvbiwgdHJhbnNpdGlvblN0YXRlIH0pID0+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogYXBwZWFyYW5jZXNbYXBwZWFyYW5jZV0uYmcsXHJcbiAgICAgIGJvcmRlclJhZGl1cyxcclxuICAgICAgYm94U2hhZG93OiAnMCAzcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xNzUpJyxcclxuICAgICAgY29sb3I6IGFwcGVhcmFuY2VzW2FwcGVhcmFuY2VdLnRleHQsXHJcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgICAgbWFyZ2luQm90dG9tOiBndXR0ZXIsXHJcbiAgICAgIHRyYW5zaXRpb246IGB0cmFuc2Zvcm0gJHt0cmFuc2l0aW9uRHVyYXRpb259bXMgY3ViaWMtYmV6aWVyKDAuMiwgMCwgMCwgMSlgLFxyXG4gICAgICB3aWR0aDogdG9hc3RXaWR0aCxcclxuICAgICAgLi4udG9hc3RTdGF0ZXMocGxhY2VtZW50KVt0cmFuc2l0aW9uU3RhdGVdLFxyXG4gICAgfTtcclxuICB9XHJcbik7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gRGVmYXVsdFRvYXN0XHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuZXhwb3J0IHR5cGUgVG9hc3RQcm9wcyA9IHtcclxuICBhcHBlYXJhbmNlOiBBcHBlYXJhbmNlVHlwZXMsXHJcbiAgYXV0b0Rpc21pc3M6IGJvb2xlYW4gfCBudW1iZXIsXHJcbiAgYXV0b0Rpc21pc3NUaW1lb3V0OiBudW1iZXIsIC8vIGluaGVyaXRlZCBmcm9tIFRvYXN0UHJvdmlkZXJcclxuICBjaGlsZHJlbjogTm9kZSxcclxuICBvbkRpc21pc3M6IEV2ZW50ID0+ICosXHJcbiAgb25Nb3VzZUVudGVyOiBIb3ZlckZuLFxyXG4gIG9uTW91c2VMZWF2ZTogSG92ZXJGbixcclxuICBwYXVzZU9uSG92ZXI6IGJvb2xlYW4sXHJcbiAgcGxhY2VtZW50OiBQbGFjZW1lbnQsXHJcbiAgdHJhbnNpdGlvbkR1cmF0aW9uOiBudW1iZXIsIC8vIGluaGVyaXRlZCBmcm9tIFRvYXN0UHJvdmlkZXJcclxuICB0cmFuc2l0aW9uU3RhdGU6IFRyYW5zaXRpb25TdGF0ZSwgLy8gaW5oZXJpdGVkIGZyb20gVG9hc3RQcm92aWRlclxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IERlZmF1bHRUb2FzdCA9ICh7XHJcbiAgYXBwZWFyYW5jZSxcclxuICBhdXRvRGlzbWlzcyxcclxuICBhdXRvRGlzbWlzc1RpbWVvdXQsXHJcbiAgY2hpbGRyZW4sXHJcbiAgaXNSdW5uaW5nLFxyXG4gIG9uRGlzbWlzcyxcclxuICBwYXVzZU9uSG92ZXIsXHJcbiAgcGxhY2VtZW50LFxyXG4gIHRyYW5zaXRpb25EdXJhdGlvbixcclxuICB0cmFuc2l0aW9uU3RhdGUsXHJcbiAgb25Nb3VzZUVudGVyLFxyXG4gIG9uTW91c2VMZWF2ZSxcclxufTogVG9hc3RQcm9wcykgPT4gKFxyXG4gIDxUb2FzdEVsZW1lbnRcclxuICAgIGFwcGVhcmFuY2U9e2FwcGVhcmFuY2V9XHJcbiAgICBwbGFjZW1lbnQ9e3BsYWNlbWVudH1cclxuICAgIHRyYW5zaXRpb25TdGF0ZT17dHJhbnNpdGlvblN0YXRlfVxyXG4gICAgdHJhbnNpdGlvbkR1cmF0aW9uPXt0cmFuc2l0aW9uRHVyYXRpb259XHJcbiAgICBvbk1vdXNlRW50ZXI9e29uTW91c2VFbnRlcn1cclxuICAgIG9uTW91c2VMZWF2ZT17b25Nb3VzZUxlYXZlfVxyXG4gID5cclxuICAgIDxJY29uXHJcbiAgICAgIGFwcGVhcmFuY2U9e2FwcGVhcmFuY2V9XHJcbiAgICAgIGF1dG9EaXNtaXNzPXthdXRvRGlzbWlzc31cclxuICAgICAgYXV0b0Rpc21pc3NUaW1lb3V0PXthdXRvRGlzbWlzc1RpbWVvdXR9XHJcbiAgICAgIGlzUnVubmluZz17aXNSdW5uaW5nfVxyXG4gICAgLz5cclxuICAgIDxDb250ZW50PntjaGlsZHJlbn08L0NvbnRlbnQ+XHJcbiAgICB7b25EaXNtaXNzID8gKFxyXG4gICAgICA8QnV0dG9uIG9uQ2xpY2s9e29uRGlzbWlzc30gcm9sZT1cImJ1dHRvblwiPlxyXG4gICAgICAgIDxDbG9zZUljb24gLz5cclxuICAgICAgICA8QTExeVRleHQ+Q2xvc2U8L0ExMXlUZXh0PlxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICkgOiBudWxsfVxyXG4gIDwvVG9hc3RFbGVtZW50PlxyXG4pO1xyXG4iXX0= */')
    },
    _react2.default.createElement(Countdown, {
      opacity: autoDismiss ? 1 : 0,
      autoDismissTimeout: autoDismissTimeout,
      isRunning: isRunning
    }),
    _react2.default.createElement(Glyph, {
      className: (0, _emotion.css)({ position: 'relative', zIndex: 1 }, '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */')
    })
  );
};
function getTranslate(placement) {
  var pos = placement.split('-');
  var relevantPlacement = pos[1] === 'center' ? pos[0] : pos[1];
  var translateMap = {
    right: 'translate3d(120%, 0, 0)',
    left: 'translate3d(-120%, 0, 0)',
    bottom: 'translate3d(0, 120%, 0)',
    top: 'translate3d(0, -120%, 0)'
  };

  return translateMap[relevantPlacement];
}

var toastStates = function toastStates(placement) {
  return {
    entering: { transform: getTranslate(placement) },
    entered: { transform: 'translate3d(0,0,0)' },
    exiting: { transform: getTranslate(placement) },
    exited: { transform: getTranslate(placement) }
  };
};
var ToastElement = /*#__PURE__*/(0, _reactEmotion2.default)('div', {
  target: 'e1bq9cr13',
  label: 'ToastElement'
})(function (_ref4) {
  var appearance = _ref4.appearance,
      placement = _ref4.placement,
      transitionDuration = _ref4.transitionDuration,
      transitionState = _ref4.transitionState;

  return _extends({
    backgroundColor: appearances[appearance].bg,
    borderRadius: borderRadius,
    boxShadow: '0 3px 8px rgba(0, 0, 0, 0.175)',
    color: appearances[appearance].text,
    display: 'flex',
    marginBottom: gutter,
    transition: 'transform ' + transitionDuration + 'ms cubic-bezier(0.2, 0, 0, 1)',
    width: toastWidth
  }, toastStates(placement)[transitionState]);
}, '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */');

// ==============================
// DefaultToast
// ==============================

var DefaultToast = exports.DefaultToast = function DefaultToast(_ref5) {
  var appearance = _ref5.appearance,
      autoDismiss = _ref5.autoDismiss,
      autoDismissTimeout = _ref5.autoDismissTimeout,
      children = _ref5.children,
      isRunning = _ref5.isRunning,
      onDismiss = _ref5.onDismiss,
      pauseOnHover = _ref5.pauseOnHover,
      placement = _ref5.placement,
      transitionDuration = _ref5.transitionDuration,
      transitionState = _ref5.transitionState,
      onMouseEnter = _ref5.onMouseEnter,
      onMouseLeave = _ref5.onMouseLeave;
  return _react2.default.createElement(
    ToastElement,
    {
      appearance: appearance,
      placement: placement,
      transitionState: transitionState,
      transitionDuration: transitionDuration,
      onMouseEnter: onMouseEnter,
      onMouseLeave: onMouseLeave
    },
    _react2.default.createElement(Icon, {
      appearance: appearance,
      autoDismiss: autoDismiss,
      autoDismissTimeout: autoDismissTimeout,
      isRunning: isRunning
    }),
    _react2.default.createElement(
      Content,
      null,
      children
    ),
    onDismiss ? _react2.default.createElement(
      Button,
      { onClick: onDismiss, role: 'button' },
      _react2.default.createElement(_icons.CloseIcon, null),
      _react2.default.createElement(
        A11yText,
        null,
        'Close'
      )
    ) : null
  );
};